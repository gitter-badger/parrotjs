/**
 * parrotjs - Client library to connect your frontend application with whatever sails backend
 * @version v0.10.22
 * @link    http://github.com/sailor/parrotjs
 * @author  Kiko Beats (https://github.com/Kikobeats)
 * @license MIT
 */
(function(){"use strict";var t,e=[].slice;t=this.parrot={version:"0.10.22",environment:"development",initialize:{},endpoint:{},url:{},storage:{},$:function(){var t;return t=1<=arguments.length?e.call(arguments,0):[],"undefined"!=typeof $$&&null!==$$?$$.apply(null,t):$.apply(null,t)}},t.initialize=void 0,function(e){return e.add=function(t){return this[t.name]=t.url,this},e.set=function(e){return t.environment=e,this},e.remove=function(t){return delete this[t],this}}(t.endpoint),function(t){return t._URLS={},t._DEFAULT={method:"GET",protocol:"http"},t._getQuery=function(t){var e,n,o,r,i,u;for(u=new Url,u.protocol="",u.path="",e=r=0,i=t.length;i>r;e=r+=2)n=t[e],u.query[n]=t[e+1];return o=u.toString(),"?"===o.charAt(0)&&(o=o.substring(1)),o},t.add=function(t){return null==t.method&&(t.method=this._DEFAULT.method),null==t.protocol&&(t.protocol=this._DEFAULT.protocol),this[t.name]=this._URLS[t.name]={method:t.method,protocol:t.protocol,path:t.path,query:null!=t.query?this._getQuery(t.query):void 0},this},t.remove=function(t){return delete this[t],this}}(t.url),t.storage=void 0}).call(this);